{"version":3,"sources":["TypeaheadSearchBar.js","TypeaheadResult.js","Fruits.js","Utils.js","Typeahead.js","App.js","index.js"],"names":["TypeaheadSearchBar","props","HandleChange","bind","HandleSubmit","HandleFocus","HandleBlur","HandleKeyDown","evt","this","ChangeSearch","target","value","preventDefault","ChangeDisplayedResult","SearchBarFocus","SearchBarBlur","keyCode","SearchBarKeyboardEnter","className","onSubmit","type","name","search","placeholder","onChange","onFocus","onBlur","onKeyDown","aria-label","Component","defaultProps","TypeaheadResult","HandleClick","firstPart","matchedPart","lastPart","isHoveredByKeyboard","onMouseDown","fruits","MergeResult","result","Typeahead","state","isFocused","searchResult","savedResult","cursorPos","newValue","matches","substringToMatch","array","regex","RegExp","substringLength","length","forEach","element","regexResult","exec","substring","index","push","FindMatches","Set","setState","prevState","key","map","fruit","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d90474ab.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './TypeaheadSearchBar.css';\n\nclass TypeaheadSearchBar extends Component {\n    static defaultProps = {\n        search: \"\",\n        ChangeSearch: () => { },\n        ChangeDisplayedResult: () => { },\n        SearchBarFocus: () => { },\n        SearchBarBlur: () => { },\n        SearchBarKeyboardEnter: () => { }\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.HandleChange = this.HandleChange.bind(this);\n        this.HandleSubmit = this.HandleSubmit.bind(this);\n        this.HandleFocus = this.HandleFocus.bind(this);\n        this.HandleBlur = this.HandleBlur.bind(this);\n        this.HandleKeyDown = this.HandleKeyDown.bind(this);\n    }\n\n    HandleChange(evt) {\n        this.props.ChangeSearch(evt.target.value);\n    }\n\n    HandleSubmit(evt) {\n        evt.preventDefault();\n        this.props.ChangeDisplayedResult();\n    }\n\n    HandleFocus(evt) {\n        this.props.SearchBarFocus();\n    }\n\n    HandleBlur(evt) {\n        this.props.SearchBarBlur();\n    }\n\n    HandleKeyDown(evt) {\n        if (evt.keyCode === 40 || evt.keyCode === 38) {\n            evt.preventDefault();\n        }\n\n        if (evt.keyCode === 13) {\n            this.props.SearchBarKeyboardEnter();\n            evt.preventDefault();\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"TypeaheadSearchBar\">\n                <form className=\"TypeaheadSearchBar-Form\"\n                    onSubmit={this.HandleSubmit}>\n                    <button className=\"TypeaheadSearchBar-Button\"><i className=\"fas fa-search\"></i></button>\n                    <input\n                        className=\"TypeaheadSearchBar-Bar\"\n                        type=\"text\"\n                        name=\"SearchBar\"\n                        value={this.props.search}\n                        placeholder={\"Search a fruit\"}\n                        onChange={this.HandleChange}\n                        onFocus={this.HandleFocus}\n                        onBlur={this.HandleBlur}\n                        onKeyDown={this.HandleKeyDown}\n                        aria-label=\"Search\"\n                    />\n                </form>\n            </div>\n        )\n    };\n}\n\nexport default TypeaheadSearchBar;\n","import React, { Component } from 'react';\nimport './TypeaheadResult.css';\n\nclass TypeaheadResult extends Component {\n    static defaultProps = {\n        firstPart: \"\",\n        matchedPart: \"\",\n        lastPart: \"\",\n        isHoveredByKeyboard: false,\n        ChangeSearch: () => { },\n        ChangeDisplayedResult: () => { }\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.HandleClick = this.HandleClick.bind(this);\n    }\n\n    HandleClick(evt) {\n        var props = this.props;\n        var firstPart = props.firstPart;\n        var matchedPart = props.matchedPart;\n        var lastPart = props.lastPart;\n\n        this.props.ChangeSearch(firstPart + matchedPart + lastPart);\n        this.props.ChangeDisplayedResult();\n    }\n\n    render() {\n        var props = this.props;\n        var firstPart = props.firstPart;\n        var matchedPart = props.matchedPart;\n        var lastPart = props.lastPart;\n        var isHoveredByKeyboard = props.isHoveredByKeyboard;\n\n        return (\n            <div className={`TypeaheadResult ${isHoveredByKeyboard ? \"TypeaheadResultKeyboardHover\" : \"\"}`} onMouseDown={this.HandleClick}>\n                <p className=\"TypeaheadResult-text\">{firstPart}<span className=\"TypeaheadResult-MatchedPart\">{matchedPart}</span>{lastPart}</p>\n            </div>\n        )\n    };\n}\n\nexport default TypeaheadResult;\n","const fruits = [\"Açaí\", \"Apple\", \"Akee\", \"Apricot\", \"Avocado\", \"Banana\", \"Bilberry\", \"Blackberry\", \"Blackcurrant\", \"Blacksapote\", \"Blueberry\", \"Boysenberry\", \"Buddha's hand\", \"Crab\", \"apples\", \"Currant\", \"Cherry\", \"Cherimoya\", \"Chico fruit\", \"Cloudberry\", \"Coconut\", \"Cranberry\", \"Cucumber\", \"Damson\", \"Date\", \"Dragonfruit\", \"Pitaya\", \"Durian\", \"Elderberry\", \"Feijoa\", \"Fig\", \"Goji berry\", \"Gooseberry\", \"Grape\", \"Raisin\", \"Grapefruit\", \"Guava\", \"Honeyberry\", \"Huckleberry\", \"Jabuticaba\", \"Jackfruit\", \"Jambul\", \"Japanese plum\", \"Jostaberry\", \"Jujube\", \"Juniper berry\", \"Kiwano\", \"Kiwifruit\", \"Kumquat\", \"Lemon\", \"Lime\", \"Loquat\", \"Longan\", \"Lychee\", \"Mango\", \"Mangosteen\", \"Marionberry\", \"Melon\", \"Cantaloupe\", \"Honeydew\", \"Watermelon\", \"Miracle fruit\", \"Mulberry\", \"Nectarine\", \"Nance\", \"Olive\", \"Orange\", \"Blood orange\", \"Clementine\", \"Mandarine\", \"Tangerine\", \"Papaya\", \"Passionfruit\", \"Peach\", \"Pear\", \"Persimmon\", \"Plantain\", \"Plum\", \"Prune\", \"Pineapple\", \"Pineberry\", \"Plumcot\", \"Pomegranate\", \"Pomelo\", \"Purple mangosteen\", \"Quince\", \"Raspberry\", \"Salmonberry\", \"Rambutan\", \"Redcurrant\", \"Salal\", \"Salak\", \"Satsuma\", \"Soursop\", \"Star apple\", \"Star fruit\", \"Strawberry\", \"Surinam cherry\", \"Tamarillo\", \"Tamarind\", \"Ugli fruit\", \"White currant\", \"White sapote\", \"Yuzu\", \"Avocado\", \"Bell pepper\", \"Chili pepper\", \"Corn kernel\", \"Cucumber\", \"Eggplant\", \"Olive\", \"Pea\", \"Pumpkin\", \"Squash\", \"Tomato\", \"Zucchin\"];\n\nexport default fruits;","export function FindMatches(substringToMatch, array) {\n    var result = [];\n\n    if (substringToMatch) {\n        var regex = new RegExp(substringToMatch);\n        var substringLength = substringToMatch.length;\n\n        array.forEach(element => {\n            var regexResult;\n            if ((regexResult = regex.exec(element)) != null) {\n\n                var firstPart = element.substring(0, regexResult.index);\n                var matchedPart = element.substring(regexResult.index, regexResult.index + substringLength);\n                var lastPart = element.substring(regexResult.index + substringLength, element.length);\n\n                result.push({ firstPart: firstPart, matchedPart: matchedPart, lastPart: lastPart });\n            }\n        });\n    }\n\n    return result;\n};\n\nexport function MergeResult(result) {\n    return result.firstPart + result.matchedPart + result.lastPart;\n}","import React, { Component } from 'react';\nimport './Typeahead.css';\nimport TypeaheadSearchBar from \"./TypeaheadSearchBar\"\nimport TypeaheadResult from \"./TypeaheadResult\"\nimport fruits from \"./Fruits\"\nimport { FindMatches, MergeResult } from './Utils.js';\n\nclass Typeahead extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isFocused: false,\n            search: \"\",\n            searchResult: [],\n            savedResult: [],\n            cursorPos: -1\n        };\n\n        this.ChangeSearch = this.ChangeSearch.bind(this);\n        this.ChangeDisplayedResult = this.ChangeDisplayedResult.bind(this);\n        this.SearchBarFocus = this.SearchBarFocus.bind(this);\n        this.SearchBarBlur = this.SearchBarBlur.bind(this);\n        this.HandleKeyDown = this.HandleKeyDown.bind(this)\n        this.SearchBarKeyboardEnter = this.SearchBarKeyboardEnter.bind(this)\n    }\n\n    ChangeSearch(newValue) {\n        var matches = FindMatches(newValue, [...new Set(fruits)]);\n        this.setState(prevState => ({\n            search: newValue,\n            searchResult: matches,\n            cursorPos: -1,\n            isFocused: true\n        }))\n    }\n\n    ChangeDisplayedResult() {\n        this.setState(prevState => ({\n            savedResult: prevState.searchResult,\n            cursorPos: -1\n        }));\n    }\n\n    SearchBarFocus() {\n        this.setState({\n            isFocused: true,\n            cursorPos: -1\n        });\n    }\n\n    SearchBarBlur() {\n        this.setState({\n            isFocused: false,\n            cursorPos: -1\n        });\n    }\n\n    HandleKeyDown(evt) {\n        var cursorPos = this.state.cursorPos;\n        var searchResult = this.state.searchResult;\n\n        if (evt.key === \"ArrowUp\" && cursorPos > 0) {\n            this.setState(prevState => ({\n                cursorPos: prevState.cursorPos - 1\n            }));\n        } else if (evt.key === \"ArrowDown\" && cursorPos < searchResult.length - 1) {\n            this.setState(prevState => ({\n                cursorPos: prevState.cursorPos + 1\n            }));\n        }\n    }\n\n    SearchBarKeyboardEnter() {\n        var cursorPos = this.state.cursorPos;\n        var searchResult = this.state.searchResult;\n\n        if (cursorPos > -1 && cursorPos < searchResult.length) {\n            var newValue = searchResult[cursorPos];\n            this.ChangeSearch(MergeResult(newValue));\n        }\n\n        this.ChangeDisplayedResult();\n        this.SearchBarBlur();\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"Typeahead\" onKeyDown={this.HandleKeyDown}>\n                    <TypeaheadSearchBar\n                        search={this.state.search}\n                        ChangeSearch={this.ChangeSearch}\n                        ChangeDisplayedResult={this.ChangeDisplayedResult}\n                        SearchBarFocus={this.SearchBarFocus}\n                        SearchBarBlur={this.SearchBarBlur}\n                        SearchBarKeyboardEnter={this.SearchBarKeyboardEnter} />\n                    {this.state.isFocused &&\n                        <div className=\"Typeahead-Results\">\n                            {this.state.searchResult.map((fruit, index) => (\n                                <TypeaheadResult key={MergeResult(fruit)}\n                                    firstPart={fruit.firstPart}\n                                    matchedPart={fruit.matchedPart}\n                                    lastPart={fruit.lastPart}\n                                    ChangeSearch={this.ChangeSearch}\n                                    ChangeDisplayedResult={this.ChangeDisplayedResult}\n                                    isHoveredByKeyboard={this.state.cursorPos === index} />\n                            ))}\n                        </div>\n                    }\n\n                </div>\n                <h1>Your last search results:</h1>\n                {this.state.savedResult.map((fruit) => (\n                    <p key={\"Display\" + MergeResult(fruit)} > {MergeResult(fruit)}</p>\n                ))\n                }\n            </div>\n        )\n    };\n}\n\nexport default Typeahead;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Typeahead from \"./Typeahead\"\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Welcome to our fruit database 🍊</h1>\n        <p>Use the search box to find the best of the fruits 🍋 🍑 🍎 🍌</p>\n        <Typeahead />\n      </div>)\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}